name: commit
keywords:
what: >
    A git commit is a snapshot of a set of changes, or manipulations to your
    Working Tree. For example, if you added 5 files, and removed 2 others, these
    changes will be contained in a commit (or snapshot). This commit can then be
    pushed to other repositories, or not!

how: |
    1. First you need to add files whose changes you want to record in a given commit. That can be done using `git add FILE1 FILE2...`
    2. Commit the changes: `git commit`, this will open an editor, write the commit message and save the file.
    3. Done, that's it, it was easy, wasn't it :D?

when: |
    You should commit each and every change that is significant.\
    All related changes should go into one commit. \
    All commits individually should pass the tests, reason being if in future you revert one commit, you'll still have a working software.

why: |
    You have to commit changes so you do not lose it.
